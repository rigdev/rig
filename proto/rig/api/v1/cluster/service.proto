syntax = "proto3";

package api.v1.cluster;

// The service to your cluster running Rig.
service Service {
  // GetConfig returns the config for the cluster
  rpc GetConfig(GetConfigRequest) returns (GetConfigResponse) {}
  // GetConfigs returns the configs for all clusters
  rpc GetConfigs(GetConfigsRequest) returns (GetConfigsResponse) {}
}

message GetConfigRequest {
  string environment_id = 1;
}

message GetConfigResponse {
  ClusterType cluster_type = 1;
  oneof dev_registry {
    DockerDaemon docker = 2;
    Registry registry = 3;
  }
  bool ingress = 4;
}

message GetConfigsRequest {}

message GetConfigsResponse {
  repeated GetConfigResponse clusters = 1;
}

message DockerDaemon {}

message Registry {
  string host = 1;
}


enum ClusterType {
  CLUSTER_TYPE_UNSPECIFIED = 0;
  CLUSTER_TYPE_DOCKER = 1;
  CLUSTER_TYPE_KUBERNETES = 2;
}
