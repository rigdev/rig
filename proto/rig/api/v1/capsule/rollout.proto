syntax = "proto3";

package api.v1.capsule;

import "google/protobuf/timestamp.proto";
import "model/author.proto";
import "api/v1/capsule/rollout/status.proto";
import "api/v1/capsule/job.proto";

enum RolloutState {
  ROLLOUT_STATE_UNSPECIFIED = 0;
  ROLLOUT_STATE_PENDING = 1;
  ROLLOUT_STATE_PREPARING = 6;
  ROLLOUT_STATE_APPLYING = 2;
  ROLLOUT_STATE_RESOURCE_CREATION = 8;
  ROLLOUT_STATE_INSTANCE_ROLL_OUT = 7;
  ROLLOUT_STATE_DONE = 3;
  ROLLOUT_STATE_ABORTED = 4;
  ROLLOUT_STATE_FAILED = 5;
}

message Change {
  message ConfigFile {
    string path = 1;
    bytes content = 2;
    bool is_secret = 3;
  }

  oneof field {
    uint32 replicas = 1;
    string build_id = 2;
    Network network = 3;
    ContainerSettings container_settings = 4;
    bool auto_add_rig_service_accounts = 5;
    ConfigFile set_config_file = 6;
    string remove_config_file = 7;
    HorizontalScale horizontal_scale = 8;
    Rollback rollback = 9;
    CronJobs cron_jobs = 10;
  }
}

message Rollout {
  uint64 rollout_id = 1;
  RolloutConfig config = 2;
  RolloutStatus status = 3;
  api.v1.capsule.rollout.Status rollout_status = 4;
}

enum EventType {
  EVENT_TYPE_UNSPECIFIED = 0;
  EVENT_TYPE_ABORT = 1;
}

message RolloutConfig {
  // The user who initiated the rollout.
  model.Author created_by = 1;
  google.protobuf.Timestamp created_at = 2;
  repeated Change changes = 3;
  uint32 replicas = 4;
  string build_id = 5;
  Network network = 6;
  ContainerSettings container_settings = 7;
  bool auto_add_rig_service_accounts = 8;
  repeated ConfigFile config_files = 9;
  HorizontalScale horizontal_scale = 10;
  repeated CronJob cron_jobs = 11;
}

message ConfigFile {
  string path = 1;
  bytes content = 2;
  model.Author updated_by = 3;
  google.protobuf.Timestamp updated_at = 4;
  bool is_secret = 5;
}

message RolloutStatus {
  RolloutState state = 1;
  google.protobuf.Timestamp updated_at = 2;
  string message = 3;
}

message ContainerSettings {
  map<string, string> environment_variables = 1;
  string command = 2;
  repeated string args = 3;
  Resources resources = 4;
  repeated EnvironmentSource environment_sources = 5;
}

message EnvironmentSource {
  enum Kind {
    KIND_UNSPECIFIED = 0;
    KIND_CONFIG_MAP = 1;
    KIND_SECRET = 2;
  }

  string name = 1;
  Kind kind = 2;
}

message Resources {
  ResourceList requests = 1;
  ResourceList limits = 2;
  GpuLimits gpu_limits = 3;
}

message ResourceList {
  // Unit: milli-CPUs
  uint32 cpu_millis = 1;
  // Unit: Bytes
  uint64 memory_bytes = 2;
}

message GpuLimits {
  // gpu resource type - fx. nvidia.com/gpu
  string type = 1;
  // number of gpus
  uint32 count = 2;
}

message Network {
  repeated Interface interfaces = 1;
}

message Interface {
  uint32 port = 1;
  string name = 2;
  PublicInterface public = 4;
  Logging logging = 5;
  Authentication authentication = 6;
  InterfaceProbe liveness = 7;
  InterfaceProbe readiness = 8;
}

message InterfaceProbe {
  message HTTP {
    string path = 1;
  }

  message TCP {}

  message GRPC {
    string service = 1;
  }

  oneof kind {
    HTTP http = 1;
    TCP tcp = 2;
    GRPC grpc = 3;
  }
}

message PublicInterface {
  bool enabled = 1;
  RoutingMethod method = 2;
}

message RoutingMethod {
  message LoadBalancer {
    uint32 port = 1;
    uint32 node_port = 2;
  }

  message Ingress {
    string host = 1;
    bool tls = 2;
    string path_prefix = 3;
  }

  oneof kind {
    LoadBalancer load_balancer = 1;
    Ingress ingress = 2;
  }
}

message Middleware {
  oneof kind {
    Logging logging = 1;
    Authentication authentication = 2;
  }
}

message Logging {
  bool enabled = 1;
}

message Authentication {
  bool enabled = 1;
  Auth default = 2;
  repeated HttpAuth http = 3;
  GRPC grpc = 4;
}

message HttpAuth {
  string path = 1;
  Auth auth = 2;
  bool exact = 3;
}

message GRPC {
  Auth auth = 1;
  string path_prefix = 2;
  map<string, GRPCService> services = 3;
}

message GRPCService {
  Auth auth = 1;
  map<string, GRPCMethod> methods = 2;
}

message GRPCMethod {
  Auth auth = 1;
}

message Auth {
  message AllowAny {}
  message AllowAuthorized {
    map<string, string> claims = 1;
  }

  oneof method {
    AllowAny allow_any = 1;
    AllowAuthorized allow_authorized = 2;
  }
}

message HorizontalScale {
  uint32 max_replicas = 1;
  uint32 min_replicas = 2;
  CPUTarget cpu_target = 3;
  repeated CustomMetric custom_metrics = 4;
}

message CPUTarget {
  uint32 average_utilization_percentage = 1;
}

message Rollback {
  uint64 rollback_id = 1;
}

message CustomMetric {
  oneof metric {
    InstanceMetric instance = 1;
    ObjectMetric object = 2;
  }
}

message InstanceMetric {
  string metric_name = 1;
  map<string, string> match_labels = 2;
  string average_value = 3;
}

message ObjectMetric {
  string metric_name = 1;
  map<string, string> match_labels = 2;
  string average_value = 3;
  string value = 4;
  ObjectReference object_reference = 5;
}

message ObjectReference {
  string kind = 1;
  string name = 2;
  string api_version = 3;
}

message CronJobs {
  repeated CronJob jobs = 1;
}
