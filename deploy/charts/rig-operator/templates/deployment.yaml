apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rig-operator.fullname" . }}
  labels: {{ include "rig-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels: {{ include "rig-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels: {{ include "rig-operator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "rig-operator.serviceAccountName" . }}
      securityContext: {{ toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.config.customPlugins }}
      initContainers:
        {{- range $i, $p := .Values.config.customPlugins }}
        - name: plugin{{$i}}
          image: {{$p.image}}
          # command: ['echo', 'image: {{$p.image}}', '>', '/plugins/manifest.yaml']
          volumeMounts:
            - name: plugins
              mountPath: /plugins
              subPath: plugin{{$i}}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext: {{ toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- if .Values.config.webhooksEnabled }}
            - name: webhooks
              containerPort: 9443
              protocol: TCP
            {{- end }}
            - name: grpc
              containerPort: 9000
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: health
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          resources: {{ toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: config
              readOnly: true
              mountPath: /etc/rig-operator
            {{- if .Values.config.webhooksEnabled }}
            - name: webhook-cert
              mountPath: /tmp/k8s-webhook-server/serving-certs
            {{- end }}
            - name: plugins
              mountPath: /app/bin/plugins-thirdparty
      volumes:
        - name: config
          secret:
            secretName: {{ include "rig-operator.secretName" . }}
        {{- if .Values.config.webhooksEnabled }}
        - name: webhook-cert
          secret:
            defaultMode: 420
            secretName: {{ include "rig-operator.fullname" . }}-webhook-tls
        {{- end }}
        - name: plugins
          emptyDir: {}
      terminationGracePeriodSeconds: 10
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
