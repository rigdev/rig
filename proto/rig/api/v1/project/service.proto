syntax = "proto3";

package api.v1.project;

import "api/v1/project/project.proto";
import "api/v1/capsule/rollout.proto";
import "api/v1/capsule/service.proto";
import "model/common.proto";
import "google/protobuf/timestamp.proto";

// The service to manage your project in Users
service Service {
  // Create project
  rpc Create(CreateRequest) returns (CreateResponse) {}
  // Delete project (everything in Users)
  rpc Delete(DeleteRequest) returns (DeleteResponse) {}
  // Get project
  rpc Get(GetRequest) returns (GetResponse) {}
  // Get project list
  rpc List(ListRequest) returns (ListResponse) {}
  // Update updates the profile of the project
  rpc Update(UpdateRequest) returns (UpdateResponse) {}
  // Get public key of system
  rpc PublicKey(PublicKeyRequest) returns (PublicKeyResponse) {}
  // Use generates a project token for editing the project as the current
  // user.
  rpc Use(UseRequest) returns (UseResponse) {}
  // Get License Information
  rpc GetLicenseInfo(GetLicenseInfoRequest) returns (GetLicenseInfoResponse) {}

  rpc GetObjectsByKind(GetObjectsByKindRequest)
      returns (GetObjectsByKindResponse) {}

  rpc GetCustomObjectMetrics(GetCustomObjectMetricsRequest)
      returns (GetCustomObjectMetricsResponse) {}
}

// The request of a Namespace.Create RPC
message CreateRequest {
  repeated api.v1.project.Update initializers = 1;
  string project_id = 2;
}

// The response of a Namespace.Create RPC
message CreateResponse {
  api.v1.project.Project project = 1;
}

// The request of a Namespace.Delete RPC
message DeleteRequest {
  string project_id = 1;
}

// The response of a Namespace.Delete RPC
message DeleteResponse {}

// The request of a Namespace.Update RPC
message UpdateRequest {
  repeated api.v1.project.Update updates = 1;
  string project_id = 2;
}

// The response of a Namespace.Update RPC
message UpdateResponse {}

// The request of a Namespace.Get RPC
message GetRequest {
  string project_id = 1;
}

// The response of a Namespace.Get RPC
message GetResponse {
  api.v1.project.Project project = 1;
}

// The request of a Namespace.List RPC
message ListRequest {
  model.Pagination pagination = 1;
  string project_id = 2;
}

message ListResponse {
  repeated api.v1.project.Project projects = 1;
  int64 total = 2;
}

// The request of a Namespace.PublicKey RPC
message PublicKeyRequest {
  string project_id = 1;
}

// The response of a Namespace.PublicKey RPC
message PublicKeyResponse {
  // The id of the project
  string public_key = 1;
}

message UseRequest {
  string project_id = 1;
}

message UseResponse {
  string project_token = 1;
}

message GetLicenseInfoRequest {
  string project_id = 1;
}

message GetLicenseInfoResponse {
  api.v1.project.Plan plan = 1;
  google.protobuf.Timestamp expires_at = 2;
}

message GetCustomObjectMetricsRequest {
  api.v1.capsule.ObjectReference object_reference = 1;
  string project_id = 2;
  string environment_id = 3;
}

message GetCustomObjectMetricsResponse {
  repeated api.v1.capsule.Metric metrics = 1;
}

message KubernetesObject {
  string kind = 1;
  string name = 2;
}

message GetObjectsByKindRequest {
  string kind = 1;
  string api_version = 2;
}

message GetObjectsByKindResponse {
  repeated KubernetesObject objects = 1;
}
