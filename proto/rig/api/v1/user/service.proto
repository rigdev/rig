syntax = "proto3";

package api.v1.user;

import "model/user.proto";
import "model/common.proto";
import "api/v1/user/user.proto";

// The service to manage users in Users.
service Service {
  // Create a new user.
  rpc Create(CreateRequest) returns (CreateResponse) {}
  // Update a users profile and info.
  rpc Update(UpdateRequest) returns (UpdateResponse) {}
  // Get the list of active sessions for the given user.
  rpc ListSessions(ListSessionsRequest) returns (ListSessionsResponse) {}
  // Get a user by user-id.
  rpc Get(GetRequest) returns (GetResponse) {}
  // Lookup a user by a unique identifier - email, username, phone number etc.
  rpc GetByIdentifier(GetByIdentifierRequest) returns (GetByIdentifierResponse) {}
  // List users.
  rpc List(ListRequest) returns (ListResponse) {}
  // Delete a specific user.
  rpc Delete(DeleteRequest) returns (DeleteResponse) {}
}

// Request to get a user by an identifier.
message GetByIdentifierRequest {
  model.UserIdentifier identifier = 1; // The identifier to lookup.
}

// Response to get a user by an identifier.
message GetByIdentifierResponse {
  api.v1.user.User user = 1; // The user.
}

// The request to create a user.
message CreateRequest {
  repeated api.v1.user.Update initializers = 1; // Initial fields to set.
  string initial_group_id = 2; // If set, the user will be added to this group upon creation.
}

// The response of creating a user.
message CreateResponse {
  api.v1.user.User user = 1; // The created user.
}

// The request of updating a user.
message UpdateRequest {
  string user_id = 1; // The user identifier of the user to update.
  repeated api.v1.user.Update updates = 2; // The updates to apply to the user.
}

// Empty update response.
message UpdateResponse {}

// Get request for retrieving a user.
message GetRequest {
  // The user identifier to fetch the user.
  string user_id = 1;
}

// The response of getting a user.
message GetResponse {
  api.v1.user.User user = 1; // The retrieved user.
}

// Request to list a users login sessions.
message ListSessionsRequest {
  string user_id = 1; // The user to retrieve sessions for.
  model.Pagination pagination = 2; // Pagination options.
}

// The response of listing a users login sessions.
message ListSessionsResponse {
  repeated api.v1.user.SessionEntry sessions = 1; // The retrieved sessions.
  uint64 total = 2; // The total number of sessions.
}

// Request for deleting a user.
message DeleteRequest {
  string user_id = 1; // The user identifier to fetch the user.
}

// Empty response for deleting a user.
message DeleteResponse {}

// Request for listing users.
message ListRequest {
  model.Pagination pagination = 1; // Pagination options.
  string search = 2; // Search string.
}

// Response for listing users.
message ListResponse {
  repeated model.UserEntry users = 1; // The users returned.
  uint64 total = 2; // total number of users.
}
