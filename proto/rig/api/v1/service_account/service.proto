syntax = "proto3";

package api.v1.service_account;
import "api/v1/service_account/service_account.proto";
import "model/user.proto";

// The service to manage your Service Accounts
service Service {
  // Create a new Service Account. The returned client_id and client_secret can
  // be used as login credentials. Note that the client_secret can only be read
  // out once, at creation.
  rpc Create(CreateRequest) returns (CreateResponse) {}

  // List all service accounts.
  rpc List(ListRequest) returns (ListResponse) {}

  // Delete a service account. It can take up to the TTL of access tokens for
  // existing sessions using this service_account, to expire.
  rpc Delete(DeleteRequest) returns (DeleteResponse) {}
}

// Request o create a service account.
message CreateRequest {
  string name = 1; // Name of the service account to create.
}


// Response of creating a service account.
message CreateResponse {
  api.v1.service_account.ServiceAccount service_account = 1; // The created service account.
  string client_id = 2; // The client id of the service account.
  string client_secret = 3; // The client secret of the service account.
}

// Request to list service accounts.
message ListRequest {}

// Response for listing service accounts.
message ListResponse {
  repeated model.ServiceAccountEntry service_accounts = 1; // the retrieved service accounts.
}

// Request to delete a service account.
message DeleteRequest {
  string service_account_id = 1; // The id of the service account to delete.
}

// Empty response for deleting a service account.
message DeleteResponse {}
