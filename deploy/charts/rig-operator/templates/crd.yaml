{{- if .Values.installCRDs }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
    {{- if and .Values.config.webhooksEnabled .Values.certManager.enabled }}
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "rig-operator.fullname" . }}-webhook
    {{- end }}
  name: capsules.rig.dev
spec:
  group: rig.dev
  names:
    kind: Capsule
    listKind: CapsuleList
    plural: capsules
    singular: capsule
  scope: Namespaced
  {{- if .Values.config.webhooksEnabled }}
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: {{ include "rig-operator.fullname" . }}
          namespace: {{ .Release.Namespace }}
          path: /convert
          port: 9443
      conversionReviewVersions:
        - v1alpha1
        - v1alpha2
        - v1beta1
  {{- end }}
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Capsule is the Schema for the capsules API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          scale:
            description: Scale holds metadata for the HorizontalPodAutoscaler
            properties:
              replicas:
                format: int32
                type: integer
            required:
            - replicas
            type: object
          spec:
            description: Spec holds the specification of the Capsule.
            properties:
              args:
                description: Args is a list of arguments either passed to the Command
                  or if Command is left empty the arguments will be passed to the
                  ENTRYPOINT of the docker image.
                items:
                  type: string
                type: array
              command:
                description: Command is run as a command in the shell. If left unspecified,
                  the container will run using what is specified as ENTRYPOINT in
                  the Dockerfile.
                type: string
              env:
                description: Env specifies configuration for how the container should
                  obtain environment variables.
                properties:
                  automatic:
                    description: Automatic sets wether the capsule should automatically
                      use existing secrets and configmaps which share the same name
                      as the capsule as environment variables.
                    type: boolean
                  from:
                    description: From holds a list of references to secrets and configmaps
                      which should be mounted as environment variables.
                    items:
                      description: EnvSource holds a reference to either a ConfigMap
                        or a Secret
                      properties:
                        configMapName:
                          description: ConfigMapName is the name of a ConfigMap in
                            the same namespace as the Capsule
                          type: string
                        secretName:
                          description: SecretName is the name of a Secret in the same
                            namespace as the Capsule
                          type: string
                      type: object
                    type: array
                type: object
              files:
                description: Files is a list of files to mount in the container. These
                  can either be based on ConfigMaps or Secrets.
                items:
                  description: File defines a mounted file and where to retrieve the
                    contents from
                  properties:
                    configMap:
                      description: ConfigMap specifies that this file is based on
                        a key in a ConfigMap. The ConfigMap field is mutually exclusive
                        with Secret.
                      properties:
                        key:
                          description: Key specifies the key holding the file contents.
                          type: string
                        name:
                          description: Name specifies the name of the Secret or ConfigMap.
                          type: string
                      required:
                      - key
                      - name
                      type: object
                    path:
                      description: Path specifies the full path where the File should
                        be mounted including the file name.
                      type: string
                    secret:
                      description: Secret specifies that this file is based on a key
                        in a Secret. The Secret field is mutually exclusive with ConfigMap.
                      properties:
                        key:
                          description: Key specifies the key holding the file contents.
                          type: string
                        name:
                          description: Name specifies the name of the Secret or ConfigMap.
                          type: string
                      required:
                      - key
                      - name
                      type: object
                  required:
                  - path
                  type: object
                type: array
              horizontalScale:
                description: HorizontalScale describes how the Capsule should scale
                  out
                properties:
                  cpuTarget:
                    description: CPUTarget specifies that this Capsule should be scaled
                      using CPU utilization.
                    properties:
                      averageUtilizationPercentage:
                        description: AverageUtilizationPercentage sets the utilization
                          which when exceeded will trigger autoscaling.
                        format: int32
                        maximum: 100
                        minimum: 0
                        type: integer
                    required:
                    - averageUtilizationPercentage
                    type: object
                  maxReplicas:
                    description: MaxReplicas is the maximum amount of replicas that
                      the Capsule should have.
                    format: int32
                    type: integer
                  minReplicas:
                    description: MinReplicas is the minimum amount of replicas that
                      the Capsule should have.
                    format: int32
                    type: integer
                type: object
              image:
                description: Image specifies what image the Capsule should run.
                type: string
              imagePullSecret:
                description: ImagePullSecret is a reference to a secret holding docker
                  credentials for the registry of the image.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              interfaces:
                description: Interfaces specifies the list of interfaces the the container
                  should have. Specifying interfaces will create the corresponding
                  kubernetes Services and Ingresses depending on how the interface
                  is configured.
                items:
                  description: CapsuleInterface defines an interface for a capsule
                  properties:
                    name:
                      description: Name specifies a descriptive name of the interface.
                      type: string
                    port:
                      description: Port specifies what port the interface should have.
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    public:
                      description: Public specifies if and how the interface should
                        be published.
                      properties:
                        ingress:
                          description: Ingress specifies that this interface should
                            be exposed through an Ingress resource. The Ingress field
                            is mutually exclusive with the LoadBalancer field.
                          properties:
                            host:
                              description: Host specifies the DNS name of the Ingress
                                resource
                              type: string
                          required:
                          - host
                          type: object
                        loadBalancer:
                          description: LoadBalancer specifies that this interface
                            should be exposed through a LoadBalancer Service. The
                            LoadBalancer field is mutually exclusive with the Ingress
                            field.
                          properties:
                            nodePort:
                              description: NodePort specifies a NodePort that the
                                Service will use instead of acting as a LoadBalancer.
                              format: int32
                              type: integer
                            port:
                              description: Port is the external port on the LoadBalancer
                              format: int32
                              maximum: 65535
                              minimum: 1
                              type: integer
                          required:
                          - port
                          type: object
                      type: object
                  required:
                  - name
                  - port
                  type: object
                type: array
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector is a selector for what nodes the Capsule
                  should live on.
                type: object
              replicas:
                description: Replicas specifies how many replicas the Capsule should
                  have.
                format: int32
                type: integer
              resources:
                description: Resources describes what resources the Capsule should
                  have access to.
                properties:
                  claims:
                    description: "Claims lists the names of resources, defined in
                      spec.resourceClaims, that are used by this container. \n This
                      is an alpha field and requires enabling the DynamicResourceAllocation
                      feature gate. \n This field is immutable. It can only be set
                      for containers."
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: Name must match the name of one entry in pod.spec.resourceClaims
                            of the Pod where this field is used. It makes that resource
                            available inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              serviceAccountName:
                description: ServiceAccountName specifies the name of an existing
                  ServiceAccount which the Capsule should run as.
                type: string
            required:
            - image
            type: object
          status:
            description: Status holds the status of the Capsule
            properties:
              deploymentStatus:
                properties:
                  message:
                    type: string
                  state:
                    enum:
                    - created
                    - failed
                    type: string
                type: object
              observedGeneration:
                format: int64
                type: integer
              ownedResources:
                items:
                  properties:
                    message:
                      type: string
                    ref:
                      description: TypedLocalObjectReference contains enough information
                        to let you locate the typed referenced object inside the same
                        namespace.
                      properties:
                        apiGroup:
                          description: APIGroup is the group for the resource being
                            referenced. If APIGroup is not specified, the specified
                            Kind must be in the core API group. For any other third-party
                            types, APIGroup is required.
                          type: string
                        kind:
                          description: Kind is the type of resource being referenced
                          type: string
                        name:
                          description: Name is the name of resource being referenced
                          type: string
                      required:
                      - kind
                      - name
                      type: object
                      x-kubernetes-map-type: atomic
                    state:
                      enum:
                      - created
                      - failed
                      type: string
                  required:
                  - ref
                  type: object
                type: array
              replicas:
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: false
    subresources:
      scale:
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Capsule is the Schema for the capsules API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec holds the specification of the Capsule.
            properties:
              args:
                description: Args is a list of arguments either passed to the Command
                  or if Command is left empty the arguments will be passed to the
                  ENTRYPOINT of the docker image.
                items:
                  type: string
                type: array
              command:
                description: Command is run as a command in the shell. If left unspecified,
                  the container will run using what is specified as ENTRYPOINT in
                  the Dockerfile.
                type: string
              cronJobs:
                items:
                  properties:
                    command:
                      properties:
                        args:
                          items:
                            type: string
                          type: array
                        command:
                          type: string
                      required:
                      - command
                      type: object
                    maxRetries:
                      description: Defaults to 6
                      type: integer
                    name:
                      type: string
                    schedule:
                      type: string
                    timeoutSeconds:
                      type: integer
                    url:
                      properties:
                        path:
                          type: string
                        port:
                          type: integer
                        queryParameters:
                          additionalProperties:
                            type: string
                          type: object
                      required:
                      - path
                      - port
                      type: object
                  required:
                  - name
                  - schedule
                  type: object
                type: array
              env:
                description: Env specifies configuration for how the container should
                  obtain environment variables.
                properties:
                  disable_automatic:
                    description: DisableAutomatic sets wether the capsule should disable
                      automatically use of existing secrets and configmaps which share
                      the same name as the capsule as environment variables.
                    type: boolean
                  from:
                    description: From holds a list of references to secrets and configmaps
                      which should be mounted as environment variables.
                    items:
                      description: EnvSource holds a reference to either a ConfigMap
                        or a Secret
                      properties:
                        kind:
                          description: Kind is the resource kind of the env reference,
                            must be ConfigMap or Secret.
                          type: string
                        name:
                          description: Name is the name of a ConfigMap or Secret in
                            the same namespace as the Capsule.
                          type: string
                      required:
                      - kind
                      - name
                      type: object
                    type: array
                type: object
              files:
                description: Files is a list of files to mount in the container. These
                  can either be based on ConfigMaps or Secrets.
                items:
                  description: File defines a mounted file and where to retrieve the
                    contents from
                  properties:
                    path:
                      description: Path specifies the full path where the File should
                        be mounted including the file name.
                      type: string
                    ref:
                      description: Ref specifies a reference to a ConfigMap or Secret
                        key which holds the contents of the file.
                      properties:
                        key:
                          description: Key in reference which holds file contents.
                          type: string
                        kind:
                          description: Kind of reference. Can be either ConfigMap
                            or Secret.
                          type: string
                        name:
                          description: Name of reference.
                          type: string
                      required:
                      - key
                      - kind
                      - name
                      type: object
                  required:
                  - path
                  type: object
                type: array
              image:
                description: Image specifies what image the Capsule should run.
                type: string
              interfaces:
                description: Interfaces specifies the list of interfaces the the container
                  should have. Specifying interfaces will create the corresponding
                  kubernetes Services and Ingresses depending on how the interface
                  is configured.
                items:
                  description: CapsuleInterface defines an interface for a capsule
                  properties:
                    liveness:
                      description: Liveness specifies that this interface should be
                        used for liveness probing. Only one of the Capsule interfaces
                        can be used as liveness probe.
                      properties:
                        grpc:
                          description: GRPC specifies that this is a GRCP probe.
                          properties:
                            service:
                              description: Service specifies the GRPC health probe
                                service to probe. This is a used as service name as
                                per standard GRPC health/v1.
                              type: string
                          required:
                          - service
                          type: object
                        path:
                          description: Path is the HTTP path of the probe. Path is
                            mutually exclusive with the TCP and GCRP fields.
                          type: string
                        tcp:
                          description: TCP specifies that this is a simple TCP listen
                            probe.
                          type: boolean
                      type: object
                    name:
                      description: Name specifies a descriptive name of the interface.
                      type: string
                    port:
                      description: Port specifies what port the interface should have.
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    public:
                      description: Public specifies if and how the interface should
                        be published.
                      properties:
                        ingress:
                          description: Ingress specifies that this interface should
                            be exposed through an Ingress resource. The Ingress field
                            is mutually exclusive with the LoadBalancer field.
                          properties:
                            host:
                              description: Host specifies the DNS name of the Ingress
                                resource.
                              type: string
                            paths:
                              description: Paths specifies a list of paths. In order
                                for a request to hit the ingress at least one of these
                                must match the request.
                              items:
                                type: string
                              type: array
                          required:
                          - host
                          type: object
                        loadBalancer:
                          description: LoadBalancer specifies that this interface
                            should be exposed through a LoadBalancer Service. The
                            LoadBalancer field is mutually exclusive with the Ingress
                            field.
                          properties:
                            port:
                              description: Port is the external port on the LoadBalancer
                              format: int32
                              maximum: 65535
                              minimum: 1
                              type: integer
                          required:
                          - port
                          type: object
                      type: object
                    readiness:
                      description: Readiness specifies that this interface should
                        be used for readiness probing. Only one of the Capsule interfaces
                        can be used as readiness probe.
                      properties:
                        grpc:
                          description: GRPC specifies that this is a GRCP probe.
                          properties:
                            service:
                              description: Service specifies the GRPC health probe
                                service to probe. This is a used as service name as
                                per standard GRPC health/v1.
                              type: string
                          required:
                          - service
                          type: object
                        path:
                          description: Path is the HTTP path of the probe. Path is
                            mutually exclusive with the TCP and GCRP fields.
                          type: string
                        tcp:
                          description: TCP specifies that this is a simple TCP listen
                            probe.
                          type: boolean
                      type: object
                    routes:
                      description: Host routes that are mapped to this interface.
                      items:
                        description: HostRoute is the configuration of a route to
                          the network interface it's configured on.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations of the route option. This can
                              be plugin-specific configuration that allows custom
                              plugins to add non-standard behavior.
                            type: object
                          host:
                            description: Host of the route. This field is required
                              and cannot be empty.
                            type: string
                          id:
                            description: ID of the route. This field is required and
                              cannot be empty, and must be unique for the interface.
                              If this field is changed, it may result in downtime,
                              as it is used to generate resources.
                            type: string
                          paths:
                            description: HTTP paths of the host that maps to the interface.
                              If empty, all paths are automatically matched.
                            items:
                              description: A HTTP path routing.
                              properties:
                                match:
                                  description: The method of matching. By default,
                                    `Prefix` is used.
                                  enum:
                                  - Prefix
                                  - Exact
                                  type: string
                                path:
                                  description: Path of the route.
                                  type: string
                              required:
                              - path
                              type: object
                            type: array
                        required:
                        - host
                        - id
                        type: object
                      type: array
                  required:
                  - name
                  - port
                  type: object
                type: array
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector is a selector for what nodes the Capsule
                  should live on.
                type: object
              scale:
                description: Scale specifies the scaling of the Capsule.
                properties:
                  horizontal:
                    description: Horizontal specifies the horizontal scaling of the
                      Capsule.
                    properties:
                      cpuTarget:
                        description: CPUTarget specifies that this Capsule should
                          be scaled using CPU utilization.
                        properties:
                          utilization:
                            description: Utilization specifies the average CPU target.
                              If the average exceeds this number new instances will
                              be added.
                            format: int32
                            maximum: 100
                            minimum: 1
                            type: integer
                        type: object
                      customMetrics:
                        description: CustomMetrics specifies custom metrics emitted
                          by the custom.metrics.k8s.io API which the autoscaler should
                          scale on
                        items:
                          description: CustomMetric defines a custom metrics emitted
                            by the custom.metrics.k8s.io API which the autoscaler
                            should scale on Exactly one of InstanceMetric and ObjectMetric
                            must be provided
                          properties:
                            instanceMetric:
                              description: InstanceMetric defines a custom instance-based
                                metric (pod-metric in Kubernetes lingo)
                              properties:
                                averageValue:
                                  description: AverageValue defines the average value
                                    across all instances which the autoscaler scales
                                    towards
                                  type: string
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels is a set of key, value
                                    pairs which filters the metric series
                                  type: object
                                metricName:
                                  description: MetricName is the name of the metric
                                  type: string
                              required:
                              - averageValue
                              - metricName
                              type: object
                            objectMetric:
                              description: ObjectMetric defines a custom object-based
                                metric
                              properties:
                                averageValue:
                                  description: AverageValue scales the number of instances
                                    towards making the value returned by the metric
                                    divided by the number of instances reach AverageValue
                                    Exactly one of 'Value' and 'AverageValue' must
                                    be set
                                  type: string
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels is a set of key, value
                                    pairs which filters the metric series
                                  type: object
                                metricName:
                                  description: MetricName is the name of the metric
                                  type: string
                                objectReference:
                                  description: DescribedObject is a reference to the
                                    object in the same namespace which is described
                                    by the metric
                                  properties:
                                    apiVersion:
                                      description: apiVersion is the API version of
                                        the referent
                                      type: string
                                    kind:
                                      description: 'kind is the kind of the referent;
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'name is the name of the referent;
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                value:
                                  description: Value scales the number of instances
                                    towards making the value returned by the metric
                                    'Value' Exactly one of 'Value' and 'AverageValue'
                                    must be set
                                  type: string
                              required:
                              - metricName
                              - objectReference
                              type: object
                          type: object
                        type: array
                      instances:
                        description: Instances specifies minimum and maximum amount
                          of Capsule instances.
                        properties:
                          max:
                            description: Max specifies the maximum amount of instances
                              to run. Omit to disable autoscaling.
                            format: int32
                            type: integer
                          min:
                            description: Min specifies the minimum amount of instances
                              to run.
                            format: int32
                            type: integer
                        required:
                        - min
                        type: object
                    required:
                    - instances
                    type: object
                  vertical:
                    description: Vertical specifies the vertical scaling of the Capsule.
                    properties:
                      cpu:
                        description: CPU specifies the CPU resource request and limit
                        properties:
                          limit:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Limit specifies the resource limit.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          request:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Request specifies the resource request.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        type: object
                      gpu:
                        description: GPU specifies the GPU resource request and limit
                        properties:
                          request:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Request specifies the request of a resource.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        type: object
                      memory:
                        description: Memory specifies the Memory resource request
                          and limit
                        properties:
                          limit:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Limit specifies the resource limit.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          request:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Request specifies the resource request.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        type: object
                    type: object
                type: object
            required:
            - image
            type: object
          status:
            description: Status holds the status of the Capsule
            properties:
              deploymentStatus:
                properties:
                  message:
                    type: string
                  state:
                    enum:
                    - created
                    - failed
                    type: string
                type: object
              errors:
                items:
                  type: string
                type: array
              observedGeneration:
                format: int64
                type: integer
              ownedResources:
                items:
                  properties:
                    message:
                      type: string
                    ref:
                      description: TypedLocalObjectReference contains enough information
                        to let you locate the typed referenced object inside the same
                        namespace.
                      properties:
                        apiGroup:
                          description: APIGroup is the group for the resource being
                            referenced. If APIGroup is not specified, the specified
                            Kind must be in the core API group. For any other third-party
                            types, APIGroup is required.
                          type: string
                        kind:
                          description: Kind is the type of resource being referenced
                          type: string
                        name:
                          description: Name is the name of resource being referenced
                          type: string
                      required:
                      - kind
                      - name
                      type: object
                      x-kubernetes-map-type: atomic
                    state:
                      enum:
                      - created
                      - failed
                      - alreadyExists
                      - unchanged
                      - updated
                      - changePending
                      - deleted
                      type: string
                  required:
                  - ref
                  type: object
                type: array
              replicas:
                format: int32
                type: integer
              usedResources:
                items:
                  properties:
                    message:
                      type: string
                    ref:
                      description: TypedLocalObjectReference contains enough information
                        to let you locate the typed referenced object inside the same
                        namespace.
                      properties:
                        apiGroup:
                          description: APIGroup is the group for the resource being
                            referenced. If APIGroup is not specified, the specified
                            Kind must be in the core API group. For any other third-party
                            types, APIGroup is required.
                          type: string
                        kind:
                          description: Kind is the type of resource being referenced
                          type: string
                        name:
                          description: Name is the name of resource being referenced
                          type: string
                      required:
                      - kind
                      - name
                      type: object
                      x-kubernetes-map-type: atomic
                    state:
                      enum:
                      - found
                      - missing
                      - error
                      type: string
                  required:
                  - ref
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{- end }}
