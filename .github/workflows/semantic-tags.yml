name: Semantic Tags

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-rc.*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --force --tags

      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-go@v4
        with:
          go-version: 1.21.0

      - name: Cache tools
        uses: actions/cache@v3
        with:
          path: |
            tools/bin
          key: ${{ runner.os }}-tools-${{ hashFiles('tools/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-tools-

      - name: Get dashboard asset ID
        uses: actions/github-script@v6
        id: get-asset-id
        with:
          github-token: ${{ secrets.RIGBOT_GITHUB_TOKEN }}
          script: |
            const release = await github.rest.repos.getReleaseByTag({
              "owner": "rigdev",
              "repo": "dashboard",
              "tag": "v0.2.8"
            })
            const asset = release.data.assets.find(a => a.name == "public.tar.gz")
            if (!asset) {
              throw new Error("could not find public.tar.gz")
            }
            return asset.id

      - name: Download and embed dashboard
        run: |
          curl -LJO \
            --header "Authorization: Bearer $GITHUB_TOKEN" \
            --header "Accept: application/octet-stream" \
            https://api.github.com/repos/rigdev/dashboard/releases/assets/${{steps.get-asset-id.outputs.result}}
          tar -xzvf public.tar.gz
          rsync -a public/ pkg/service/web/
          rm -rf public public.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.RIGBOT_GITHUB_TOKEN }}

      - name: Release
        run: make proto release
        env:
          RIGBOT_GITHUB_TOKEN: ${{ secrets.RIGBOT_GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
