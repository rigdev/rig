name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: false # this is handled in the golangci-lint-action

      - name: Cache tools
        uses: actions/cache@v3
        with:
          path: |
            tools/bin
          key: ${{ runner.os }}-tools-${{ hashFiles('tools/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-tools-

      - name: Generate code
        run: make ci

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          args: --timeout 3m

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Cache tools
        uses: actions/cache@v3
        with:
          path: |
            tools/bin
          key: ${{ runner.os }}-tools-${{ hashFiles('tools/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-tools-

      - name: Run tests
        run: make ci test-all

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "test-result.xml"
        if: always()

  cli-import-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Test cli import
        run: |
          go mod init example.com
          go mod edit -replace github.com/rigdev/rig=github.com/${{ github.event.pull_request.head.repo.owner.login }}/${{ github.event.pull_request.head.repo.name }}@${{ github.event.pull_request.head.sha }}
          echo -e 'package main\nimport (\n	_ "github.com/rigdev/rig/cmd/rig/cmd"\n)\nfunc main() {\n}\n' > main.go
          go mod tidy
          go run ./main.go

  generated-files-committed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Cache tools
        uses: actions/cache@v3
        with:
          path: |
            tools/bin
          key: ${{ runner.os }}-tools-${{ hashFiles('tools/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-tools-

      - name: Check for uncommitted changes after generating files
        run: |
          make ci
          go mod tidy
          cd tools && go mod tidy
          GIT_STATUS="$(git status --porcelain)"
          if [ -n "$GIT_STATUS" ]; then
            echo "Repository has uncommited files:"
            echo "$GIT_STATUS"
            exit 1
          fi
