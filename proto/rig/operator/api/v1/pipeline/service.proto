syntax = "proto3";

package api.v1.pipeline;

import "google/protobuf/timestamp.proto";

// The service for interacting with the operator pipeline
service Service {
  rpc WatchObjectStatus(WatchObjectStatusRequest)
      returns (stream WatchObjectStatusResponse) {}

  rpc DryRun(DryRunRequest) returns (DryRunResponse) {}
}

message WatchObjectStatusRequest {
  string namespace = 1;
}

message WatchObjectStatusResponse {
  ObjectStatusChange change = 1;
}

message ObjectStatusChange {
  string capsule = 1;

  oneof change {
    ObjectStatus updated = 2;
    ObjectRef deleted = 3;
  }
}

enum ObjectType {
  OBJECT_TYPE_UNSPECIFIED = 0;
  OBJECT_TYPE_PRIMARY = 1;
  OBJECT_TYPE_SECONDARY = 2;
  OBJECT_TYPE_POD = 3;
}

message ObjectStatus {
  ObjectRef object_ref = 1;
  ObjectType type = 2;
  repeated ObjectCondition conditions = 3;
  map<string, string> properties = 4;
}

enum ObjectState {
  OBJECT_STATE_UNSPECIFIED = 0;
  OBJECT_STATE_HEALTHY = 1;
  OBJECT_STATE_PENDING = 2;
  OBJECT_STATE_ERROR = 3;
}

message ObjectCondition {
  string name = 1;
  google.protobuf.Timestamp updated_at = 2;
  ObjectState state = 3;
  string message = 4;
}

message DryRunRequest {
  string namespace = 1;
  string capsule = 2;
  // A YAML encoded OperatorConfig, to be used when processing the pipeline.
  string operator_config = 3;
  // An optional YAML encoded capsule spec, to be used instead of the current
  // one.
  string capsule_spec = 4;
  // If force is enabled, existing resources will be handled as if they were
  // supposed to be replaced.
  bool force = 5;
  // Additional objects to be considered materialized when performing the dryrun
  repeated Object additional_objects = 6;
}

message DryRunResponse {
  repeated Object input_objects = 1;
  repeated ObjectChange output_objects = 2;
}

enum ObjectOutcome {
  OBJECT_OUTCOME_UNSPECIFIED = 0;
  OBJECT_OUTCOME_CREATE = 1;
  OBJECT_OUTCOME_UPDATE = 2;
  OBJECT_OUTCOME_DELETE = 3;
  OBJECT_OUTCOME_UNCHANGED = 4;
  OBJECT_OUTCOME_ALREADY_EXISTS = 5;
}

message ObjectChange {
  Object object = 1;
  ObjectOutcome outcome = 2;
}

message Object {
  GVK gvk = 1;
  string name = 2;
  string content = 3;
}

message GVK {
  string group = 1;
  string version = 2;
  string kind = 3;
}

message ObjectRef {
  GVK gvk = 1;
  string namespace = 2;
  string name = 3;
}
