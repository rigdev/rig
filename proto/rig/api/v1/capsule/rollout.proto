syntax = "proto3";

package api.v1.capsule;

import "google/protobuf/timestamp.proto";
import "model/author.proto";
import "api/v1/capsule/rollout/status.proto";
import "api/v1/capsule/job.proto";
import "api/v1/capsule/change.proto";

// Different states a rollout can be in.
enum RolloutState {
  ROLLOUT_STATE_UNSPECIFIED = 0; // Default value.
  ROLLOUT_STATE_PENDING = 1; // Pending rollout.
  ROLLOUT_STATE_PREPARING = 6; // Preparing rollout.
  ROLLOUT_STATE_APPLYING = 2; // Applying rollout.
  ROLLOUT_STATE_RESOURCE_CREATION = 8; // Creating resources.
  ROLLOUT_STATE_INSTANCE_ROLL_OUT = 7; // Rolling out instances.
  ROLLOUT_STATE_DONE = 3; // Rollout is done.
  ROLLOUT_STATE_ABORTED = 4; // Rollout is aborted.
  ROLLOUT_STATE_FAILED = 5; // Rollout failed.
}

// The rollout model.
message Rollout {
  uint64 rollout_id = 1; // Unique indentifier for the rollout.
  RolloutConfig config = 2; // The rollout config.
  RolloutStatus status = 3; // The rollout status.
  api.v1.capsule.rollout.Status rollout_status = 4; // The rollout status.
}

enum EventType {
  EVENT_TYPE_UNSPECIFIED = 0;
  EVENT_TYPE_ABORT = 1;
}

message RolloutConfig {
  // The user who initiated the rollout.
  model.Author created_by = 1;
  google.protobuf.Timestamp created_at = 2;
  repeated Change changes = 3;
  uint32 replicas = 4;
  string build_id = 5;
  Network network = 6;
  ContainerSettings container_settings = 7;
  bool auto_add_rig_service_accounts = 8;
  repeated ConfigFile config_files = 9;
  HorizontalScale horizontal_scale = 10;
  repeated CronJob cron_jobs = 11;
  string environment_id = 12;
  string message = 13;
}

message ConfigFile {
  string path = 1;
  bytes content = 2;
  model.Author updated_by = 3;
  google.protobuf.Timestamp updated_at = 4;
  bool is_secret = 5;
}

message RolloutStatus {
  RolloutState state = 1;
  google.protobuf.Timestamp updated_at = 2;
}
